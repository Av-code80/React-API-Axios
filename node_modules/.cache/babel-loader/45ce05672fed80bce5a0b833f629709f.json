{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Rating.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiTwotoneStar, AiOutlineStar } from \"react-icons/ai\";\nimport DB from \"../API/DB\";\nimport classes from \"./Rating.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rating = ({\n  rate,\n  idMovieRating\n}) => {\n  _s();\n\n  const [ratingStar, setRatingStar] = useState(rate); //console.log(rate, idMovieRating);\n\n  const changeRate = async star => {\n    // patch applique des modifications partielles à une ressource\n    const response = await DB.get(); //   //let finalStar = star;\n    //    const response = await DB.get(`/movies/${idMovieRating}`); // if current rate is equal\n    //    if (response.data.rate === star) { star = star - 1}\n    //    console.log(response.data.rate);\n\n    DB.patch(`/movies/${idMovieRating}`, {\n      // settting id is needed in patch request\n      rate: star //change rate to star\n\n    }).then(() => {\n      setRatingStar(star);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.rating,\n    children: [1, 2, 3, 4, 5].map((stared, index) => {\n      console.log(ratingStar);\n\n      if (ratingStar >= index + 1) {\n        return /*#__PURE__*/_jsxDEV(AiTwotoneStar, {\n          className: classes.ratingColor,\n          onClick: () => changeRate(stared)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(AiOutlineStar, {\n        onClick: () => changeRate(stared)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rating, \"kCL9IRF0HgEIXgLpih/XRl/ltZ4=\");\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Rating.js"],"names":["React","useState","AiTwotoneStar","AiOutlineStar","DB","classes","Rating","rate","idMovieRating","ratingStar","setRatingStar","changeRate","star","response","get","patch","then","rating","map","stared","index","console","log","ratingColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA6B;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACM,IAAD,CAA5C,CAD0C,CAE3C;;AAEE,QAAMI,UAAU,GAAG,MAAOC,IAAP,IAAgB;AAAE;AAEpC,UAAMC,QAAQ,GAAG,MAAMT,EAAE,CAACU,GAAH,EAAvB,CAFkC,CAIlC;AACF;AACA;AACA;;AAEEV,IAAAA,EAAE,CAACW,KAAH,CAAU,WAAUP,aAAc,EAAlC,EAAqC;AAAE;AACrCD,MAAAA,IAAI,EAAEK,IAD6B,CACf;;AADe,KAArC,EAEGI,IAFH,CAEQ,MAAM;AACbN,MAAAA,aAAa,CAACE,IAAD,CAAb;AACA,KAJD;AAKD,GAdA;;AAgBD,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACY,MAAxB;AAAA,cACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBC,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;;AACxC,UAAIA,UAAU,IAAIW,KAAK,GAAG,CAA1B,EAA6B;AAC3B,4BACE,QAAC,aAAD;AAAe,UAAA,SAAS,EAAEf,OAAO,CAACkB,WAAlC;AAA+C,UAAA,OAAO,EAAE,MAAMZ,UAAU,CAACQ,MAAD;AAAxE,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAID;;AACD,0BAAO,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAMT,UAAU,CAACQ,MAAD;AAAxC,SAAuDC,KAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMd,M;;KAAAA,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { AiTwotoneStar, AiOutlineStar } from \"react-icons/ai\";\nimport DB from \"../API/DB\";\nimport classes from \"./Rating.module.css\";\n\n\nconst Rating = ({ rate, idMovieRating }) => {\n  const [ratingStar, setRatingStar] = useState(rate);\n //console.log(rate, idMovieRating);\n\n   const changeRate = async (star) => { // patch applique des modifications partielles à une ressource\n  \n    const response = await DB.get()\n  \n    //   //let finalStar = star;\n  //    const response = await DB.get(`/movies/${idMovieRating}`); // if current rate is equal\n  //    if (response.data.rate === star) { star = star - 1}\n  //    console.log(response.data.rate);\n\n    DB.patch(`/movies/${idMovieRating}`, { // settting id is needed in patch request\n      rate: star,         //change rate to star\n    }).then(() => {\n     setRatingStar(star);\n    });\n  };\n\n  return (\n    <div className={classes.rating}>\n      {[1, 2, 3, 4, 5].map((stared, index) => { console.log(ratingStar);\n        if (ratingStar >= index + 1) {\n          return (\n            <AiTwotoneStar className={classes.ratingColor} onClick={() => changeRate(stared)}\n              key={index}/>\n          );\n        }\n        return <AiOutlineStar onClick={() => changeRate(stared)} key={index} />;\n      })}\n    </div>\n  );\n};\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}