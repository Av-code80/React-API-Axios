{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Quote.js\",\n    _s = $RefreshSig$();\n\n//import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quote = () => {\n  _s();\n\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n    };\n\n    const fetchData = async () => {\n      const rawQuotes = await fetch(\"https://the-one-api.dev/v2/quote\", {\n        headers: headers\n      });\n      const quotes = await rawQuotes.json();\n      const quote = quotes.docs[Math.floor(Math.random() * quotes.docs.length)];\n      setQuote(quote.dialog);\n      const rawCharacters = await fetch(\"https://the-one-api.dev/v2/character?_id=\" + quote.character, {\n        headers: headers\n      });\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.name);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n      children: [\"- \", character]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quote, \"slVYKI/mkHV5/TVQusGu5U47kcc=\");\n\n_c = Quote;\nexport default Quote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Quote.js"],"names":["React","useEffect","useState","Link","Quote","quote","setQuote","character","setCharacter","headers","Accept","Authorization","fetchData","rawQuotes","fetch","quotes","json","docs","Math","floor","random","length","dialog","rawCharacters","characters","name"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,KAAK,GAAE,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,kBADM;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAChEL,QAAAA,OAAO,EAAEA;AADuD,OAArC,CAA7B;AAGA,YAAMM,MAAM,GAAG,MAAMF,SAAS,CAACG,IAAV,EAArB;AACA,YAAMX,KAAK,GACTU,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACE,IAAP,CAAYI,MAAvC,CAAZ,CADF;AAEAf,MAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAP,CAAR;AACA,YAAMC,aAAa,GAAG,MAAMT,KAAK,CAC/B,8CAA8CT,KAAK,CAACE,SADrB,EAE/B;AAAEE,QAAAA,OAAO,EAAEA;AAAX,OAF+B,CAAjC;AAIA,YAAMe,UAAU,GAAG,MAAMD,aAAa,CAACP,IAAd,EAAzB;AACA,YAAMT,SAAS,GAAGiB,UAAU,CAACP,IAAX,CAAgB,CAAhB,CAAlB;AACAT,MAAAA,YAAY,CAACD,SAAS,CAACkB,IAAX,CAAZ;AACD,KAfD;;AAiBAb,IAAAA,SAAS;AACV,GAvBQ,EAuBN,EAvBM,CAAT;AAwBD,sBACE;AAAA,4BAEI;AAAA,gBAAaP;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,uBAASE,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApCD;;GAAMH,K;;KAAAA,K;AAsCN,eAAeA,KAAf","sourcesContent":["//import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Quote= () => {\n   const [quote, setQuote] = useState();\n   const [character, setCharacter] = useState();\n\n   useEffect(() => {\n     const headers = {\n       Accept: \"application/json\",\n       Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n     };\n     const fetchData = async () => {\n       const rawQuotes = await fetch(\"https://the-one-api.dev/v2/quote\", {\n         headers: headers,\n       });\n       const quotes = await rawQuotes.json();\n       const quote =\n         quotes.docs[Math.floor(Math.random() * quotes.docs.length)];\n       setQuote(quote.dialog);\n       const rawCharacters = await fetch(\n         \"https://the-one-api.dev/v2/character?_id=\" + quote.character,\n         { headers: headers }\n       );\n       const characters = await rawCharacters.json();\n       const character = characters.docs[0];\n       setCharacter(character.name);\n     };\n\n     fetchData();\n   }, []);\n  return (\n    <div>\n     \n        <blockquote>{quote}</blockquote>\n        <cite>- {character}</cite>\n    \n    </div>\n  );\n};\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}