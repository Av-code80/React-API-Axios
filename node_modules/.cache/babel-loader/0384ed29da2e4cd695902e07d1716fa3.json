{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/lord-of-rings/src/components/SearchData.js\",\n    _s = $RefreshSig$();\n\n//import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n    };\n\n    const fetchData = async () => {\n      const rawQuotes = await fetch(\"https://the-one-api.dev/v2/quote\", {\n        headers: headers\n      });\n      const quotes = await rawQuotes.json();\n      const quote = quotes.docs[Math.floor(Math.random() * quotes.docs.length)];\n      setQuote(quote.dialog);\n      const rawCharacters = await fetch(\"https://the-one-api.dev/v2/character?_id=\" + quote.character, {\n        headers: headers\n      });\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.movie);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n      children: [\"-- \", character]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"slVYKI/mkHV5/TVQusGu5U47kcc=\");\n\n_c = App;\nexport default App; // import React, { useState, useEffect } from \"react\";\n// // import classes from \"./SearchData.module.css\";\n// const SearchData = () => {\n// const [quote, setQuote] = useState();\n// const [character, setCharacter] = useState();\n//     useEffect(() => {\n//     const headers = {\n//       Accept: \"application/json\",\n//       Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n//     }; \n//     const fetchData = async () => {\n//      try {\n//          const response = await axios.get(\"https://the-one-api.dev/v2/quote\", {\n//              headers: headers \n//          })\n//         const quotes = await response.json();\n//         const resQuote = quotes.docs[Math.floor(Math.random() * quotes.docs.length)]\n//         console.log(setQuote(resQuote.dialog)) \n//         const secondResponse = await axios.get(\n//           \"https://the-one-api.dev/v2/character?_id=\" + resQuote.character, {\n//               headers: headers\n//           });\n//         const characters = await secondResponse.json();\n//         const resCharacter = characters.docs[0] \n//           setCharacter(resCharacter.name)\n//      }catch(error) {\n//         console.log(\"Error of Quote\" + error );\n//         console.log(\"Error of Character\" + error );\n//        }\n//     }\n//        fetchData()\n//     }, [])\n// return (\n//     <div>\n//         <blockquote>{quote}</blockquote>\n//         <cite>- {character}</cite>\n//     </div>\n// )\n// }\n//  export default SearchData;\n// const fetchData = async (searchTerm) => {\n//   const response = await axios.get(\"http://www.omdbapi.com/\", {\n//     params: {\n//       apikey: \"75cc1fba\",\n//       s: \"searchTerm\",\n//     },\n//   });\n//   console.log(response.data);\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/avehghasemian/lord-of-rings/src/components/SearchData.js"],"names":["useEffect","useState","App","quote","setQuote","character","setCharacter","headers","Accept","Authorization","fetchData","rawQuotes","fetch","quotes","json","docs","Math","floor","random","length","dialog","rawCharacters","characters","movie"],"mappings":";;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,EAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,kBADM;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAChEL,QAAAA,OAAO,EAAEA;AADuD,OAArC,CAA7B;AAGA,YAAMM,MAAM,GAAG,MAAMF,SAAS,CAACG,IAAV,EAArB;AACA,YAAMX,KAAK,GAAGU,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACE,IAAP,CAAYI,MAAvC,CAAZ,CAAd;AACAf,MAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAP,CAAR;AACA,YAAMC,aAAa,GAAG,MAAMT,KAAK,CAC/B,8CAA8CT,KAAK,CAACE,SADrB,EAE/B;AAAEE,QAAAA,OAAO,EAAEA;AAAX,OAF+B,CAAjC;AAIA,YAAMe,UAAU,GAAG,MAAMD,aAAa,CAACP,IAAd,EAAzB;AACA,YAAMT,SAAS,GAAGiB,UAAU,CAACP,IAAX,CAAgB,CAAhB,CAAlB;AACAT,MAAAA,YAAY,CAACD,SAAS,CAACkB,KAAX,CAAZ;AACD,KAdD;;AAgBAb,IAAAA,SAAS;AACV,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE;AAAA,4BACE;AAAA,gBAAaP;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,wBAAUE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlCD;;GAAMH,G;;KAAAA,G;AAoCN,eAAeA,GAAf,C,CAGA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["//import axios from \"axios\";\n\nimport { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n    };\n    const fetchData = async () => {\n      const rawQuotes = await fetch(\"https://the-one-api.dev/v2/quote\", {\n        headers: headers,\n      });\n      const quotes = await rawQuotes.json();\n      const quote = quotes.docs[Math.floor(Math.random() * quotes.docs.length)];\n      setQuote(quote.dialog);\n      const rawCharacters = await fetch(\n        \"https://the-one-api.dev/v2/character?_id=\" + quote.character,\n        { headers: headers }\n      );\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.movie);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <blockquote>{quote}</blockquote>\n      <cite>-- {character}</cite>\n    </div>\n  );\n};\n\nexport default App;\n\n\n// import React, { useState, useEffect } from \"react\";\n// // import classes from \"./SearchData.module.css\";\n\n\n// const SearchData = () => {\n// const [quote, setQuote] = useState();\n// const [character, setCharacter] = useState();\n\n//     useEffect(() => {\n      \n//     const headers = {\n//       Accept: \"application/json\",\n//       Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n//     }; \n//     const fetchData = async () => {\n//      try {\n//          const response = await axios.get(\"https://the-one-api.dev/v2/quote\", {\n//              headers: headers \n//          })\n//         const quotes = await response.json();\n//         const resQuote = quotes.docs[Math.floor(Math.random() * quotes.docs.length)]\n//         console.log(setQuote(resQuote.dialog)) \n\n//         const secondResponse = await axios.get(\n//           \"https://the-one-api.dev/v2/character?_id=\" + resQuote.character, {\n//               headers: headers\n//           });\n//         const characters = await secondResponse.json();\n//         const resCharacter = characters.docs[0] \n//           setCharacter(resCharacter.name)\n//      }catch(error) {\n//         console.log(\"Error of Quote\" + error );\n//         console.log(\"Error of Character\" + error );\n//        }\n//     }\n//        fetchData()\n//     }, [])\n// return (\n\n//     <div>\n//         <blockquote>{quote}</blockquote>\n//         <cite>- {character}</cite>\n//     </div>\n// )\n\n// }\n\n//  export default SearchData;\n\n\n// const fetchData = async (searchTerm) => {\n//   const response = await axios.get(\"http://www.omdbapi.com/\", {\n//     params: {\n//       apikey: \"75cc1fba\",\n//       s: \"searchTerm\",\n//     },\n//   });\n\n//   console.log(response.data);\n// };"]},"metadata":{},"sourceType":"module"}