{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SearchData from './SearchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n    };\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://the-one-api.dev/v2/movie\", {\n          headers: headers\n        });\n        console.log(response.data.docs);\n      } catch (error) {\n        console.log(\"Error: \" + error);\n      } // const datas = await response.data;\n      // const resQuote =\n      //   datas.docs[Math.floor(Math.random() * datas.docs.length)];\n      // setQuote(resQuote.dialog);\n      //   const secondResponse = await axios.get(\n      //     \"https://the-one-api.dev/v2/character?name!=Frodo\" + resQuote.character,\n      //     {\n      //       headers: headers,\n      //     }\n      //   );\n      //   const characters = await secondResponse.data;\n      //   console.log(secondResponse.data);\n      //   const resCharacter = characters.docs[0];\n      //   setCharacter(resCharacter.name);\n      // } catch (error) {\n      //   console.log(\"Error of Quote\" + error);\n      //   console.log(\"Error of Character\" + error);\n      // }\n\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Home\", /*#__PURE__*/_jsxDEV(SearchData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Movies, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Movies.js"],"names":["React","SearchData","Movies","useEffect","headers","Accept","Authorization","fetchData","response","axios","get","console","log","data","docs","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjBC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,kBADM;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,kCAAV,EAA8C;AACnEN,UAAAA,OAAO,EAAEA;AAD0D,SAA9C,CAAvB;AAIAO,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAAT,CAAcC,IAA1B;AACD,OAND,CAME,OAAOC,KAAP,EAAc;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYG,KAAxB;AACD,OAT2B,CAU5B;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACD,KA/BD;;AAgCAR,IAAAA,SAAS;AACV,GAtCQ,EAsCN,EAtCM,CAAT;AAuCA,sBACE;AAAA,oCAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH,CA9CD;;GAAML,M;;KAAAA,M;AAgDN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport SearchData from './SearchData';\n\n\nconst Movies = () => {\n    useEffect(() => {\n      const headers = {\n        Accept: \"application/json\",\n        Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n      };\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(\"https://the-one-api.dev/v2/movie\", {\n            headers: headers,\n          });\n\n          console.log(response.data.docs);\n        } catch (error) {\n          console.log(\"Error: \" + error);\n        }\n        // const datas = await response.data;\n\n        // const resQuote =\n        //   datas.docs[Math.floor(Math.random() * datas.docs.length)];\n        // setQuote(resQuote.dialog);\n\n        //   const secondResponse = await axios.get(\n        //     \"https://the-one-api.dev/v2/character?name!=Frodo\" + resQuote.character,\n        //     {\n        //       headers: headers,\n        //     }\n        //   );\n        //   const characters = await secondResponse.data;\n        //   console.log(secondResponse.data);\n\n        //   const resCharacter = characters.docs[0];\n        //   setCharacter(resCharacter.name);\n        // } catch (error) {\n        //   console.log(\"Error of Quote\" + error);\n        //   console.log(\"Error of Character\" + error);\n        // }\n      };\n      fetchData();\n    }, []);\n    return (\n      <div>\n        Home\n        <SearchData />\n      </div>\n    );\n}\n\nexport default Movies\n"]},"metadata":{},"sourceType":"module"}