{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/SearchData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport classes from \"./SearchData.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchData = () => {\n  _s();\n\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n    };\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://the-one-api.dev/v2/quote\", {\n          headers: headers\n        });\n        const datas = await response.data;\n        const resQuote = datas.docs[Math.floor(Math.random() * datas.docs.length)];\n        setQuote(resQuote.dialog);\n        const secondResponse = await axios.get(\"https://the-one-api.dev/v2/character\" + resQuote.character, {\n          headers: headers\n        });\n        const characters = await secondResponse.data;\n        console.log(secondResponse.data);\n        const resCharacter = characters.docs[0];\n        setCharacter(resCharacter.name);\n      } catch (error) {\n        console.log(\"Error of Quote\" + error);\n        console.log(\"Error of Character\" + error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dataWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: classes.blockQuote,\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n      children: [\"- \", character]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchData, \"slVYKI/mkHV5/TVQusGu5U47kcc=\");\n\n_c = SearchData;\nexport default SearchData; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import classes from \"./SearchData.module.css\";\n// const SearchData = () => {\n//   const [quote, setQuote] = useState();\n//   const [character, setCharacter] = useState();\n//   useEffect(() => {\n//     const headers = {\n//       Accept: \"application/json\",\n//       Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n//     };\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get(\"https://the-one-api.dev/v2/quote\", {\n//           headers: headers,\n//         });\n//         const datas = await response.data;\n//         const resQuote =\n//           datas.docs[Math.floor(Math.random() * datas.docs.length)];\n//         setQuote(resQuote.dialog);\n//         const secondResponse = await axios.get(\n//           \"https://the-one-api.dev/v2/character?_id=\" + resQuote.character,\n//           {\n//             headers: headers,\n//           }\n//         );\n//         const characters = await secondResponse.data;\n//         console.log(secondResponse.data);\n//         const resCharacter = characters.docs[0];\n//         setCharacter(resCharacter.name);\n//       } catch (error) {\n//         console.log(\"Error of Quote\" + error);\n//         console.log(\"Error of Character\" + error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n//   return (\n//     <div className={classes.dataWrapper}>\n//       <blockquote className={classes.blockQuote}>{quote}</blockquote>\n//       <cite>- {character}</cite>\n//     </div>\n//   );\n// };\n// export default SearchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchData\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/SearchData.js"],"names":["React","useState","useEffect","axios","classes","SearchData","quote","setQuote","character","setCharacter","headers","Accept","Authorization","fetchData","response","get","datas","data","resQuote","docs","Math","floor","random","length","dialog","secondResponse","characters","console","log","resCharacter","name","error","dataWrapper","blockQuote"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,kBADM;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,kCAAV,EAA8C;AACnEL,UAAAA,OAAO,EAAEA;AAD0D,SAA9C,CAAvB;AAGA,cAAMM,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAA7B;AAEA,cAAMC,QAAQ,GACZF,KAAK,CAACG,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAK,CAACG,IAAN,CAAWI,MAAtC,CAAX,CADF;AAEAhB,QAAAA,QAAQ,CAACW,QAAQ,CAACM,MAAV,CAAR;AAEA,cAAMC,cAAc,GAAG,MAAMtB,KAAK,CAACY,GAAN,CAC3B,yCAAyCG,QAAQ,CAACV,SADvB,EAE3B;AACEE,UAAAA,OAAO,EAAEA;AADX,SAF2B,CAA7B;AAMA,cAAMgB,UAAU,GAAG,MAAMD,cAAc,CAACR,IAAxC;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYH,cAAc,CAACR,IAA3B;AAEA,cAAMY,YAAY,GAAGH,UAAU,CAACP,IAAX,CAAgB,CAAhB,CAArB;AACAV,QAAAA,YAAY,CAACoB,YAAY,CAACC,IAAd,CAAZ;AACD,OArBD,CAqBE,OAAOC,KAAP,EAAc;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBG,KAA/B;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBG,KAAnC;AACD;AACF,KA1BD;;AA2BAlB,IAAAA,SAAS;AACV,GAjCQ,EAiCN,EAjCM,CAAT;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAAC4B,WAAxB;AAAA,4BACE;AAAY,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,UAA/B;AAAA,gBAA4C3B;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uBAASE,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5CD;;GAAMH,U;;KAAAA,U;AA8CN,eAAeA,UAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport classes from \"./SearchData.module.css\";\n\nconst SearchData = () => {\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n    };\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://the-one-api.dev/v2/quote\", {\n          headers: headers,\n        });\n        const datas = await response.data;\n\n        const resQuote =\n          datas.docs[Math.floor(Math.random() * datas.docs.length)];\n        setQuote(resQuote.dialog);\n\n        const secondResponse = await axios.get(\n          \"https://the-one-api.dev/v2/character\" + resQuote.character,\n          {\n            headers: headers,\n          }\n        );\n        const characters = await secondResponse.data;\n        console.log(secondResponse.data);\n\n        const resCharacter = characters.docs[0];\n        setCharacter(resCharacter.name);\n      } catch (error) {\n        console.log(\"Error of Quote\" + error);\n        console.log(\"Error of Character\" + error);\n      }\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className={classes.dataWrapper}>\n      <blockquote className={classes.blockQuote}>{quote}</blockquote>\n      <cite>- {character}</cite>\n    </div>\n  );\n};\n\nexport default SearchData;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import classes from \"./SearchData.module.css\";\n\n// const SearchData = () => {\n//   const [quote, setQuote] = useState();\n//   const [character, setCharacter] = useState();\n\n//   useEffect(() => {\n//     const headers = {\n//       Accept: \"application/json\",\n//       Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n//     };\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get(\"https://the-one-api.dev/v2/quote\", {\n//           headers: headers,\n//         });\n//         const datas = await response.data;\n\n//         const resQuote =\n//           datas.docs[Math.floor(Math.random() * datas.docs.length)];\n//         setQuote(resQuote.dialog);\n\n//         const secondResponse = await axios.get(\n//           \"https://the-one-api.dev/v2/character?_id=\" + resQuote.character,\n//           {\n//             headers: headers,\n//           }\n//         );\n//         const characters = await secondResponse.data;\n//         console.log(secondResponse.data);\n\n//         const resCharacter = characters.docs[0];\n//         setCharacter(resCharacter.name);\n//       } catch (error) {\n//         console.log(\"Error of Quote\" + error);\n//         console.log(\"Error of Character\" + error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n//   return (\n//     <div className={classes.dataWrapper}>\n//       <blockquote className={classes.blockQuote}>{quote}</blockquote>\n//       <cite>- {character}</cite>\n//     </div>\n//   );\n// };\n\n// export default SearchData;\n"]},"metadata":{},"sourceType":"module"}