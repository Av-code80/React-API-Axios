{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Quote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quote = () => {\n  _s();\n\n  const headers = {\n    Accept: \"application/json\",\n    Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n  };\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer xvi06TocPJvBmrQC4yZv\"\n    };\n\n    const fetchData = async () => {\n      var _quotes$docs;\n\n      const rawQuotes = await fetch(\"https://the-one-api.dev/v2/quote\", {\n        headers: headers\n      });\n      const quotes = await rawQuotes.json();\n      const quote = quotes.docs[Math.floor(Math.random() * (quotes === null || quotes === void 0 ? void 0 : (_quotes$docs = quotes.docs) === null || _quotes$docs === void 0 ? void 0 : _quotes$docs.length))];\n      setQuote(quote.dialog);\n      const rawCharacters = await fetch(\"https://the-one-api.dev/v2/character?_id=\" + quote.character, {\n        headers: headers\n      });\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.name);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/character\",\n      children: \"Quote :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quote, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Quote;\nexport default Quote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Quote.js"],"names":["React","useEffect","useState","Link","Quote","headers","Accept","Authorization","fetchData","rawQuotes","fetch","quotes","json","quote","docs","Math","floor","random","length","setQuote","dialog","rawCharacters","character","characters","setCharacter","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,kBADM;AAEdC,IAAAA,aAAa,EAAE;AAFD,GAAhB;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,kBADM;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAhB;;AAKA,UAAMC,SAAS,GAAG,YAAY;AAAA;;AAC5B,YAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAChEL,QAAAA,OAAO,EAAEA;AADuD,OAArC,CAA7B;AAGA,YAAMM,MAAM,GAAG,MAAMF,SAAS,CAACG,IAAV,EAArB;AACA,YAAMC,KAAK,GACTF,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAgBN,MAAhB,aAAgBA,MAAhB,uCAAgBA,MAAM,CAAEG,IAAxB,iDAAgB,aAAcI,MAA9B,CAAX,CAAZ,CADF;AAEAC,MAAAA,QAAQ,CAACN,KAAK,CAACO,MAAP,CAAR;AACA,YAAMC,aAAa,GAAG,MAAMX,KAAK,CAC/B,8CAA8CG,KAAK,CAACS,SADrB,EAE/B;AAAEjB,QAAAA,OAAO,EAAEA;AAAX,OAF+B,CAAjC;AAIA,YAAMkB,UAAU,GAAG,MAAMF,aAAa,CAACT,IAAd,EAAzB;AACA,YAAMU,SAAS,GAAGC,UAAU,CAACT,IAAX,CAAgB,CAAhB,CAAlB;AACAU,MAAAA,YAAY,CAACF,SAAS,CAACG,IAAX,CAAZ;AACD,KAfD;;AAiBAjB,IAAAA,SAAS;AACV,GAxBQ,EAwBN,EAxBM,CAAT;AA0BE,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtCD;;GAAMJ,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Quote = () => {\n   \n  const headers = {\n    Accept: \"application/json\",\n    Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n  };\n\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer xvi06TocPJvBmrQC4yZv\",\n    };\n\n    const fetchData = async () => {\n      const rawQuotes = await fetch(\"https://the-one-api.dev/v2/quote\", {\n        headers: headers,\n      });\n      const quotes = await rawQuotes.json();\n      const quote =\n        quotes.docs[Math.floor(Math.random() * quotes?.docs?.length)];\n      setQuote(quote.dialog);\n      const rawCharacters = await fetch(\n        \"https://the-one-api.dev/v2/character?_id=\" + quote.character,\n        { headers: headers }\n      );\n      const characters = await rawCharacters.json();\n      const character = characters.docs[0];\n      setCharacter(character.name);\n    };\n\n    fetchData();\n  }, []);\n\n    return (\n        <div>\n            <Link to=\"/character\">Quote :</Link>\n        </div>\n    )\n}\n\nexport default Quote\n"]},"metadata":{},"sourceType":"module"}