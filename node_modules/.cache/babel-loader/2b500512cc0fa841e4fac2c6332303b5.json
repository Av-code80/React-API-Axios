{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/SearchData.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./SearchData.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchData = () => {\n  _s();\n\n  const [quote, setQuote] = useState();\n  const [character, setCharacter] = useState();\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n    };\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://the-one-api.dev/v2/movie/{id}\", {\n          headers: headers\n        });\n        const datas = await response.data;\n        const resQuote = datas.docs[Math.floor(Math.random() * quotes.docs.length)];\n        setQuote(resQuote.name);\n        const secondResponse = await axios.get(\"https://the-one-api.dev/v2/character?_id=\" + resQuote.character, {\n          headers: headers\n        });\n        const characters = await secondResponse.data;\n        console.log(secondResponse.data);\n        const resCharacter = characters.docs;\n        setCharacter(resCharacter.id);\n      } catch (error) {\n        console.log(\"Error of Quote\" + error);\n        console.log(\"Error of Character\" + error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dataWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n      className: classes.blockQuote,\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n      children: [\"- \", character]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchData, \"slVYKI/mkHV5/TVQusGu5U47kcc=\");\n\n_c = SearchData;\nexport default SearchData; // const fetchData = async (searchTerm) => {\n//   const response = await axios.get(\"http://www.omdbapi.com/\", {\n//     params: {\n//       apikey: \"75cc1fba\",\n//       s: \"searchTerm\",\n//     },\n//   });\n//   console.log(response.data);\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchData\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/SearchData.js"],"names":["axios","React","useState","useEffect","classes","SearchData","quote","setQuote","character","setCharacter","headers","Accept","Authorization","fetchData","response","get","datas","data","resQuote","docs","Math","floor","random","quotes","length","name","secondResponse","characters","console","log","resCharacter","id","error","dataWrapper","blockQuote"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACC,OAAOC,OAAP,MAAoB,yBAApB;;;AAGD,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AAEIC,EAAAA,SAAS,CAAC,MAAM;AAEhB,UAAMO,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,kBADM;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAhB;;AAIA,UAAMC,SAAS,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CACrB,uCADqB,EAErB;AACEL,UAAAA,OAAO,EAAEA;AADX,SAFqB,CAAvB;AAMA,cAAMM,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAA7B;AAED,cAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,MAAM,CAACJ,IAAP,CAAYK,MAAvC,CAAX,CAAjB;AACAjB,QAAAA,QAAQ,CAACW,QAAQ,CAACO,IAAV,CAAR;AAEA,cAAMC,cAAc,GAAG,MAAM1B,KAAK,CAACe,GAAN,CAC3B,8CAA8CG,QAAQ,CAACV,SAD5B,EACuC;AAC9DE,UAAAA,OAAO,EAAEA;AADqD,SADvC,CAA7B;AAIC,cAAMiB,UAAU,GAAG,MAAMD,cAAc,CAACT,IAAxC;AACDW,QAAAA,OAAO,CAACC,GAAR,CAAYH,cAAc,CAACT,IAA3B;AAEA,cAAMa,YAAY,GAAGH,UAAU,CAACR,IAAhC;AACEV,QAAAA,YAAY,CAACqB,YAAY,CAACC,EAAd,CAAZ;AACJ,OArBD,CAqBC,OAAMC,KAAN,EAAa;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBG,KAA/B;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBG,KAAnC;AACA;AACH,KA1BD;;AA2BGnB,IAAAA,SAAS;AACX,GAlCQ,EAkCN,EAlCM,CAAT;AAmCJ,sBAEI;AAAK,IAAA,SAAS,EAAET,OAAO,CAAC6B,WAAxB;AAAA,4BACE;AAAY,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,UAA/B;AAAA,gBAA4C5B;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uBAASE,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQC,CA/CD;;GAAMH,U;;KAAAA,U;AAiDL,eAAeA,UAAf,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n import classes from \"./SearchData.module.css\";\n\n\nconst SearchData = () => {\nconst [quote, setQuote] = useState();\nconst [character, setCharacter] = useState();\n\n    useEffect(() => {\n   \n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n    }; \n    const fetchData = async () => {\n     try {\n         const response = await axios.get(\n           \"https://the-one-api.dev/v2/movie/{id}\",\n           {\n             headers: headers,\n           }\n         );\n         const datas = await response.data;\n\n        const resQuote = datas.docs[Math.floor(Math.random() * quotes.docs.length)]\n        setQuote(resQuote.name);\n\n        const secondResponse = await axios.get(\n          \"https://the-one-api.dev/v2/character?_id=\" + resQuote.character, {\n              headers: headers\n          });\n         const characters = await secondResponse.data;\n        console.log(secondResponse.data);\n\n        const resCharacter = characters.docs \n          setCharacter(resCharacter.id)\n     }catch(error) {\n        console.log(\"Error of Quote\" + error );\n        console.log(\"Error of Character\" + error );\n       }\n    }\n       fetchData()\n    }, [])\nreturn (\n\n    <div className={classes.dataWrapper}>\n      <blockquote className={classes.blockQuote}>{quote}</blockquote>\n      <cite>- {character}</cite>\n    </div>\n)\n\n}\n\n export default SearchData;\n\n\n// const fetchData = async (searchTerm) => {\n//   const response = await axios.get(\"http://www.omdbapi.com/\", {\n//     params: {\n//       apikey: \"75cc1fba\",\n//       s: \"searchTerm\",\n//     },\n//   });\n\n//   console.log(response.data);\n// };"]},"metadata":{},"sourceType":"module"}