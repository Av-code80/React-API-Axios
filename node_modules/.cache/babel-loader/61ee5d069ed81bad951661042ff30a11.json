{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Details.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport DB from '../API/DB';\nimport Rating from './Rating';\nimport classes from './Details.module.css'; //import useLord from '../hooks/useLord';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = props => {\n  _s();\n\n  // props for getting sparId\n  const [movie, setMovie] = useState(\"\");\n  const [quote, setQuote] = useState({});\n  const [characters, setCharacters] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const {\n    id: movieId\n  } = props.match.params; //data source\n\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\"\n    };\n\n    (async function () {\n      try {\n        const response = await axios.get(`https://the-one-api.dev/v2/movie/${movieId}`, {\n          headers: headers\n        });\n        setMovie(response.data.docs[0]); //console.log(response.data);\n      } catch (error) {\n        console.log(\"Error quote: \" + error);\n      }\n\n      try {\n        const response = await axios.get(`https://the-one-api.dev/v2/movie/${movieId}/quote`, {\n          headers: headers\n        });\n        setQuote(response.data.docs); //console.log(response.data.docs);\n      } catch (error) {\n        console.log(\"Error quote: \" + error);\n      }\n\n      try {\n        const response = await axios.get(`https://the-one-api.dev/v2/character`, {\n          headers: headers\n        });\n        setCharacters(response.data.docs);\n        console.log(response.data.docs);\n      } catch (error) {\n        console.log(\"Error character: \" + error);\n      }\n    })();\n  }, [movieId]);\n  useEffect(() => {\n    (async function () {\n      try {\n        // get data step\n        const response = await DB.get(`/movies/${movieId}`);\n        setRating(response.data.rate);\n      } catch (error) {\n        // post data\n        if (error.response.status === 404 && movie._id) {\n          console.log(movie._id);\n          await DB.post('/movies', {\n            id: movie._id,\n            rate: 0\n          });\n        } // console.log(error.response.status) // 404\n\n      }\n    })();\n  }, [movie]);\n\n  if (!quote || !characters) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // props : rate={rating}\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.movieDetails,\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        rate: rating,\n        idMovieRating: movieId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: quote.map(({\n          dialog,\n          _id\n        }, index) => {\n          if (index > 10) return false;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: dialog\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: characters.map(({\n          _id,\n          name\n        }, index) => {\n          if (index > 10) return false;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: name\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_s(Details, \"cMhJt4l5btY/rcIGQX+ed5+Krgk=\");\n\n_c = Details;\nexport default Details;\n/* <div>{JSON.stringify(movie.name)}</div> */\n//       import axios from 'axios'\n// import React, { useEffect, useState } from 'react'\n// import { Link } from 'react-router-dom'\n// //import useLord from '../hooks/useLord';\n// const Details = (props) => {\n//   const [movie, setMovie] = useState(\"\");\n//   const [quote, setQuote] = useState(\"\");\n//   const [characters, setCharacters] = useState(\"\");\n//   const { id: movieId } = props.match.params;\n//   const [ loadingMovie, resultMovie, errorMovie ] = useLord(`movie/${movieId}`);\n//   const [ loadingQuote, resultQuote, errorQuote ] = useLord(`movie/${movieId}/quote`);\n//   const [ loadingCharacter, resultCharacter, errorCharacter ] = useLord(\"character\");\n//   console.log(loadingMovie);\n//    // data source\n//   //useEffect(() => {\n//     // const headers = {\n//     //   Accept: \"application/json\",\n//     //   Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n//     // };\n//   //   (async function () {\n//   //     try {\n//   //       const response = await axios.get(\n//   //         `https://the-one-api.dev/v2/movie/${movieId}`,\n//   //         { headers: headers }\n//   //       );\n//   //       setMovie(response.data.docs[0]);\n//   //       // console.log(response.data.docs[0].name);\n//   //     } catch (error) {\n//   //       console.log(\"Error quote: \" + error);\n//   //     }\n//   //     try {\n//   //       const response = await axios.get(\n//   //         `https://the-one-api.dev/v2/movie/${movieId}/quote`,\n//   //         { headers: headers }\n//   //       );\n//   //       //console.log(response);\n//   //       setQuote(response.data.docs);\n//   //       // console.log(response.data.docs);\n//   //     } catch (error) {\n//   //       console.log(\"Error quote: \" + error);\n//   //     }\n//   //     try {\n//   //       const response = await axios.get(\n//   //         `https://the-one-api.dev/v2/character`,\n//   //         { headers: headers }\n//   //       );\n//   //       setCharacters(response.data.docs);\n//   //       //console.log(response.data.docs);\n//   //     } catch (error) {\n//   //       console.log(\"Error character: \" + error);\n//   //     }\n//   //   })();\n//   // }, [movieId]);\n//   // if (!quote || !characters) {\n//   //   return <div>Loading...</div>;\n//   // }\n// //   console.log(resultMovie, resultMovie.length);\n// // if (!loadingQuote || !loadingCharacter || !loadingMovie) {\n// //   return <div>Loading...</div>;\n// // }\n//   // if ((resultMovie.length == 1)) return \"Loading\";\n//   //console.log(resultMovie.length);\n//   console.log(resultQuote);\n//   if (!resultMovie.hasOwnProperty(\"docs\") || !resultQuote.hasOwnProperty(\"docs\") \n//   || !resultCharacter.hasOwnProperty(\"docs\") ) {\n//    return <div>Loading...</div>\n//   }\n//   return (\n//     <>\n//       <div>{resultMovie.docs[0].name}</div>\n//       <ul>\n//         {resultQuote.docs.map(({ dialog, _id }, index) => {\n//           if (index > 10) return false;\n//           return <li key={_id}>{dialog}</li>;\n//         })}\n//       </ul>\n//       <ul>\n//         {resultCharacter.docs.map(({ _id, name }, index) => {\n//           if (index > 10) return false;\n//           return <div key={_id}>{name}</div>;\n//         })}\n//       </ul>\n//     </>\n//   );\n//       };\n// export default Details\n//  {/* <div>{JSON.stringify(movie.name)}</div> */}\n//       {/* \n//       */}\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/lord-of-rings/React-API-Axios/src/components/Details.js"],"names":["axios","React","useEffect","useState","Link","DB","Rating","classes","Details","props","movie","setMovie","quote","setQuote","characters","setCharacters","rating","setRating","id","movieId","match","params","headers","Accept","Authorization","response","get","data","docs","error","console","log","rate","status","_id","post","movieDetails","name","map","dialog","index"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport DB from '../API/DB'\nimport Rating from './Rating'\nimport classes from './Details.module.css'\n//import useLord from '../hooks/useLord';\n\n  \nconst Details = (props) => { // props for getting sparId\n \n  const [movie, setMovie] = useState(\"\");\n  const [quote, setQuote] = useState({});\n  const [characters, setCharacters] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  \n  const { id: movieId } = props.match.params;\n\n   //data source\n  useEffect(() => {\n    const headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n    };\n\n    (async function () {\n\n      try {\n        const response = await axios.get(\n          `https://the-one-api.dev/v2/movie/${movieId}`,\n          { headers: headers }\n        );\n        setMovie(response.data.docs[0]);\n         //console.log(response.data);\n      } catch (error) {\n        console.log(\"Error quote: \" + error);\n      }\n      try {\n        const response = await axios.get(\n          `https://the-one-api.dev/v2/movie/${movieId}/quote`,\n          { headers: headers }\n        );\n        setQuote(response.data.docs);\n        //console.log(response.data.docs);\n      } catch (error) {\n        console.log(\"Error quote: \" + error);\n      }\n      try {\n        const response = await axios.get(\n          `https://the-one-api.dev/v2/character`,\n          { headers: headers }\n        );\n        setCharacters(response.data.docs);\n        console.log(response.data.docs);\n      } catch (error) {\n        console.log(\"Error character: \" + error);\n      }\n    })();\n  }, [movieId]);\n\n  useEffect(() => {\n\n    (async function() {\n\n        try{ // get data step\n            const response = await DB.get(`/movies/${movieId}`) \n                    setRating(response.data.rate);\n        } catch(error) { // post data\n          if (error.response.status === 404 && movie._id) {\n            console.log(movie._id);\n\n                await DB.post('/movies', {id:movie._id, rate:0})\n          }\n\n          // console.log(error.response.status) // 404\n        }\n    }) ()\n  }, [movie])\n\n\n  if (!quote || !characters) {\n    return <div>Loading...</div>;\n  }\n\n  return (  // props : rate={rating}\n    <>\n    <div>\n\n      \n    </div>\n      <Link className={classes.movieDetails} to=\"/\">Home</Link>\n      <Rating rate={rating} idMovieRating={movieId} /> \n      \n      <div>{movie.name}</div>\n      <ul>\n        {quote.map(({ dialog, _id }, index) => {\n          if (index > 10) return false;\n          return <li key={_id}>{dialog}</li>;\n        })}\n      </ul>\n      <ul>\n        {characters.map(({ _id, name }, index) => {\n          if (index > 10) return false;\n          return <div key={_id}>{name}</div>;\n        })}\n      </ul>\n    </>\n  );\n      };\n\nexport default Details\n\n    \n /* <div>{JSON.stringify(movie.name)}</div> */\n      \n    \n    \n\n//       import axios from 'axios'\n// import React, { useEffect, useState } from 'react'\n// import { Link } from 'react-router-dom'\n// //import useLord from '../hooks/useLord';\n\n\n// const Details = (props) => {\n//   const [movie, setMovie] = useState(\"\");\n//   const [quote, setQuote] = useState(\"\");\n//   const [characters, setCharacters] = useState(\"\");\n  \n//   const { id: movieId } = props.match.params;\n\n//   const [ loadingMovie, resultMovie, errorMovie ] = useLord(`movie/${movieId}`);\n//   const [ loadingQuote, resultQuote, errorQuote ] = useLord(`movie/${movieId}/quote`);\n//   const [ loadingCharacter, resultCharacter, errorCharacter ] = useLord(\"character\");\n\n//   console.log(loadingMovie);\n\n//    // data source\n//   //useEffect(() => {\n//     // const headers = {\n//     //   Accept: \"application/json\",\n//     //   Authorization: \"Bearer daNXH8aks1JeT2dEenRY\",\n//     // };\n\n//   //   (async function () {\n//   //     try {\n//   //       const response = await axios.get(\n//   //         `https://the-one-api.dev/v2/movie/${movieId}`,\n//   //         { headers: headers }\n//   //       );\n//   //       setMovie(response.data.docs[0]);\n//   //       // console.log(response.data.docs[0].name);\n//   //     } catch (error) {\n//   //       console.log(\"Error quote: \" + error);\n//   //     }\n//   //     try {\n//   //       const response = await axios.get(\n//   //         `https://the-one-api.dev/v2/movie/${movieId}/quote`,\n//   //         { headers: headers }\n//   //       );\n//   //       //console.log(response);\n//   //       setQuote(response.data.docs);\n//   //       // console.log(response.data.docs);\n//   //     } catch (error) {\n//   //       console.log(\"Error quote: \" + error);\n//   //     }\n//   //     try {\n//   //       const response = await axios.get(\n//   //         `https://the-one-api.dev/v2/character`,\n//   //         { headers: headers }\n//   //       );\n//   //       setCharacters(response.data.docs);\n//   //       //console.log(response.data.docs);\n//   //     } catch (error) {\n//   //       console.log(\"Error character: \" + error);\n//   //     }\n//   //   })();\n//   // }, [movieId]);\n\n//   // if (!quote || !characters) {\n//   //   return <div>Loading...</div>;\n//   // }\n\n\n// //   console.log(resultMovie, resultMovie.length);\n// // if (!loadingQuote || !loadingCharacter || !loadingMovie) {\n// //   return <div>Loading...</div>;\n// // }\n\n//   // if ((resultMovie.length == 1)) return \"Loading\";\n//   //console.log(resultMovie.length);\n//   console.log(resultQuote);\n//   if (!resultMovie.hasOwnProperty(\"docs\") || !resultQuote.hasOwnProperty(\"docs\") \n//   || !resultCharacter.hasOwnProperty(\"docs\") ) {\n\n//    return <div>Loading...</div>\n//   }\n\n//   return (\n//     <>\n//       <div>{resultMovie.docs[0].name}</div>\n//       <ul>\n//         {resultQuote.docs.map(({ dialog, _id }, index) => {\n//           if (index > 10) return false;\n//           return <li key={_id}>{dialog}</li>;\n//         })}\n//       </ul>\n//       <ul>\n//         {resultCharacter.docs.map(({ _id, name }, index) => {\n//           if (index > 10) return false;\n//           return <div key={_id}>{name}</div>;\n//         })}\n//       </ul>\n//     </>\n//   );\n//       };\n\n// export default Details\n\n    \n//  {/* <div>{JSON.stringify(movie.name)}</div> */}\n//       {/* \n//       */}\n    "]},"metadata":{},"sourceType":"module"}